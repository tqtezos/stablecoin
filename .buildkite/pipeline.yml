# SPDX-FileCopyrightText: 2021 Oxhead Alpha
# SPDX-License-Identifier: MIT

env:
  FETCH_CONTRACT: >-
    mkdir -p haskell/test/resources/
    && buildkite-agent artifact download stablecoin.tz haskell/test/resources/
    && buildkite-agent artifact download stablecoin.fa1.2.tz haskell/test/resources/
    && buildkite-agent artifact download metadata.tz haskell/test/resources/ --step "LIGO-contract"
  TEZOS_CLIENT_UNSAFE_DISABLE_DISCLAIMER: "Y"

.network-tests: &network-tests
  commands:
    - eval "$FETCH_CONTRACT"
    - cd haskell/
    - export PATH=$(nix build ..#stablecoin:exe:stablecoin-client --print-out-paths --no-link)/bin:$PATH
    - nix build -L ..#stablecoin:test:stablecoin-test
    # Note that 'refill-balance' below is the initial 'TASTY_CLEVELAND_MONEYBAG_SECRET_KEY' balance
    # which may need to be adjusted in case of insufficient balance errors
    - $(nix-build ../ -A utils.run-chain-tests
        --argstr refill-balance 1100
        --argstr node-endpoint "$$TASTY_CLEVELAND_NODE_ENDPOINT"
        --argstr step-moneybag "$$CHAIN_TEST_MONEYBAG_SECRET_KEY"
        --argstr step-moneybag-password "$$CHAIN_TEST_MONEYBAG_PASSWORD"
        --no-out-link
        --argstr scenario './result/bin/stablecoin-test --cleveland-mode=only-network')
  retry:
    automatic:
      limit: 1

steps:
  - label: hlint
    if: &not_scheduled
      build.source != "schedule"
    command:
      nix shell .#haskellPackages.hlint -c ./scripts/lint.sh

  - label: check
    if: *not_scheduled
    command:
      nix flake check -L

  - label: xrefcheck
    command: nix run "github:serokell/xrefcheck?rev=d1f465048eb2d9f345dbcfcc645a07440c7ebe80"
    if: *not_scheduled
    # TODO [#205]: Remove the flag below
    soft_fail:
      - exit_status: 1

  - label: LIGO-contract
    key: LIGO-contract
    commands:
      - nix build -L .#tezos-contract -o stablecoin_raw.tz
      - nix shell .#morley -c morley optimize --contract stablecoin_raw.tz --output stablecoin.tz
      - nix build -L .#tezos-contract-fa1-2 -o stablecoin.fa1.2_raw.tz
      - nix shell .#morley -c morley optimize --contract stablecoin.fa1.2_raw.tz --output stablecoin.fa1.2.tz
      - nix build -L .#tezos-metadata-contract -o metadata.tz
    artifact_paths:
      - stablecoin.tz
      - stablecoin.fa1.2.tz
      - metadata.tz

  # wait for the contract step to complete, so the next steps can download generated contract
  - wait

  - label: build library
    key: build_library
    if: *not_scheduled
    timeout_in_minutes: 180
    commands:
      - eval "$FETCH_CONTRACT"
      - nix build -L .#stablecoin:lib:stablecoin

  - label: haddock
    if: *not_scheduled
    depends_on: build_library
    commands:
      - eval "$FETCH_CONTRACT"
      - nix build -L .#haddock

  - label: test
    key: test
    if: *not_scheduled
    depends_on: build_library
    commands:
      - eval "$FETCH_CONTRACT"
      - cd haskell
      - nix build -L ..#stablecoin:test:stablecoin-test
      - ./result/bin/stablecoin-test --cleveland-mode=disable-network

  - &local-chain
    label: nettest-local-chain-017
    key: nettest-local-chain-017
    if: *not_scheduled
    depends_on: build_library
    <<: *network-tests
    env: &local-chain-env
      TASTY_CLEVELAND_NODE_ENDPOINT: "http://localhost:8734"
      CHAIN_TEST_MONEYBAG_SECRET_KEY: "unencrypted:edsk3AvAoPS5jFov49aWBQ9oVtCPwNSne2CriHvkFxfeCg4Srr5bak"
      # this key is defined in local-chain bootstrap accounts list in
      # https://github.com/serokell/aquarius-infra/blob/master/servers/albali/chain.nix

  - &nettest
    label: nettest-scheduled-nairobinet
    key: nettest-scheduled-nairobinet
    if: build.source == "schedule"
    depends_on:
      - build_library
      - LIGO-contract
    <<: *network-tests
    env: &nettest-env
      TASTY_CLEVELAND_NODE_ENDPOINT: "https://nairobi.testnet.tezos.serokell.team"
      CHAIN_TEST_MONEYBAG_SECRET_KEY: "$TESTNET_MONEYBAG"
      CHAIN_TEST_MONEYBAG_PASSWORD: "$TESTNET_MONEYBAG_PASSWORD"
      # Running all of the tests on network will end up draining the moneybag; for now, only FA1.2 tests are run
      TASTY_PATTERN: '/Test.FA1_2/||/Lorentz.Contracts.Nettest/'
    timeout_in_minutes: 360

  - label: weeder
    key: weeder
    if: *not_scheduled
    depends_on: build_library
    commands:
      - eval "$FETCH_CONTRACT"
      - cd haskell
      - nix run -L ..#ci:weeder

  - label: packaging
    if: *not_scheduled
    depends_on:
      - test
      - nettest-local-chain-017
      - nettest-scheduled-nairobinet
      - weeder
    commands:
      - eval "$FETCH_CONTRACT"
      - nix build -L .#stablecoin:exe:stablecoin-client -o stablecoin-static
      - nix shell .#pkgs.upx -c upx stablecoin-static/bin/stablecoin-client -o stablecoin-client
    artifact_paths:
      - ./stablecoin-client

notify:
  - email: "tezos-alerts@serokell.io"
    if: build.state == "failed" && build.source == "schedule"

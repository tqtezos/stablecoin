{ parameter (or (int %put) (pair %sum (int %0) (int %1))) ;
  storage
    (pair (pair (big_map %put_entry
                   bool
                   (lambda (pair (int %0) (int %1)) (pair (list %0 operation) (int %1))))
                (int %state))
          (big_map %sum_entry
             bool
             (lambda (pair (pair %0 (int %0) (int %1)) (int %1)) (pair (list %0 operation) (int %1))))) ;
  code { DUP ;
         CDR ;
         DIP { DUP } ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             PUSH bool True ;
             GET ;
             IF_NONE { PUSH string "memems" ; FAILWITH } { DUP ; DIP { DROP } } ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             DIP { DIP { DUP } ; SWAP ; CAR ; CDR } ;
             PAIR ;
             DIP { DUP } ;
             EXEC ;
             DUP ;
             CAR ;
             DIP { DIP 2 { DUP } ;
                   DIG 2 ;
                   DIP { DUP } ;
                   SWAP ;
                   CDR ;
                   DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                   SWAP ;
                   PAIR ;
                   PAIR } ;
             PAIR ;
             DIP { DROP 5 } }
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CDR ;
             DUP ;
             CDR ;
             PUSH bool True ;
             GET ;
             IF_NONE { PUSH string "memems" ; FAILWITH } { DUP ; DIP { DROP } } ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             DIP { DIP { DUP } ; SWAP ; CAR ; CDR } ;
             PAIR ;
             DIP { DUP } ;
             EXEC ;
             DUP ;
             CAR ;
             DIP { DIP 2 { DUP } ;
                   DIG 2 ;
                   DIP { DUP } ;
                   SWAP ;
                   CDR ;
                   DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                   SWAP ;
                   PAIR ;
                   PAIR } ;
             PAIR ;
             DIP { DROP 5 } } ;
         DIP { DROP 2 } } }

